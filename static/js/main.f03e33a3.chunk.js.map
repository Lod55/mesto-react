{"version":3,"sources":["contexts/CurrentUserContext.js","images/fail.svg","images/success.svg","components/InfoTooltip.js","components/ProtectedRoute.js","components/Register.js","components/Login.js","images/Logo.svg","components/Header.js","components/Card.js","components/ImagePopup.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/RemovePlacePopup.js","components/Main.js","components/Footer.js","utils/auth.js","utils/api.js","components/App.js","index.js"],"names":["CurrentUserContext","createContext","InfoTooltip","props","isOpen","onClose","isSuccess","path","useLocation","pathname","tooltip","image","success","fail","className","type","onClick","src","alt","ProtectedRoute","loggedIn","children","to","Register","onRegister","initialData","email","password","confirmation","initialInputsValid","form","initialErrorsValid","useState","data","setData","validations","setValidations","errorsValid","setErrorsValid","handleChange","e","target","name","value","validity","validationMessage","valid","resetForm","id","onSubmit","preventDefault","then","catch","err","console","log","message","placeholder","minLength","maxLength","onChange","required","Login","onLogin","Header","onSignOut","userEmail","isActive","setIsActive","logo","Card","card","onCardLike","onImageClick","onCardTrash","currentUser","useContext","isOwn","owner","_id","isLiked","likes","some","item","link","length","ImagePopup","PopupWithForm","title","textButton","validationForm","EditProfilePopup","onUpdateUser","author","about","useEffect","EditAvatarPopup","onUpdateAvatar","avatar","AddPlacePopup","onAddPlace","RemovePlacePopup","onDeleteCard","Main","isLoading","cards","onCardDelete","onAddPlaceSubmit","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isRemovePlacePopupOpen","setIsRemovePlacePopupOpen","selectedCard","setSelectedCard","useCardId","setUseCardId","handleCardClick","handleTrashClick","closeAllPopups","handleCardLike","map","Footer","BASE_URL","responseCheck","response","ok","json","Promise","reject","status","api","baseUrl","token","groupId","this","_address","_token","_groupId","res","fetch","headers","authorization","_checkResponse","method","body","JSON","stringify","App","isInfoTooltipPopupOpen","setIsInfoTooltipPopupOpen","setCards","setIsLoading","setCurrentUser","setLoggedIn","setIsSuccess","history","useHistory","Error","getInitialCards","finally","getInfoUser","tokenCheck","useCallback","jwt","localStorage","getItem","push","Provider","removeItem","removeCard","newCards","filter","changeLikeCardStatus","setCard","setUserAvatar","setInfoUser","exact","auth","statusCode","setItem","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.f03e33a3.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nexport const CurrentUserContext = createContext();","export default __webpack_public_path__ + \"static/media/fail.7c6a020b.svg\";","export default __webpack_public_path__ + \"static/media/success.1b6082f8.svg\";","import React from 'react';\nimport fail from '../images/fail.svg';\nimport success from '../images/success.svg';\nimport { useLocation } from 'react-router-dom';\n\nconst InfoTooltip = (props) => {\n  // Диструктуризированная переменная с пропсами\n  const {\n    isOpen,\n    onClose,\n    isSuccess\n  } = props;\n\n  const path = useLocation().pathname\n\n  const tooltip = isSuccess\n    ? path === \"/sign-up\"\n      ? \"Вы успешно зарегистрировались!\"\n      : \"Вы успешно авторизовались!\"\n    : path === \"/sign-up\"\n      ? \"Что-то пошло не так! Попробуйте ещё раз.\"\n      : \"Убедитесь в правильности введенных данных. Попробуйте ещё раз.\"\n\n  const image = isSuccess\n    ? success\n    : fail\n\n  return (\n    <section className={`popup popup_type_info-tooltip ${isOpen ? 'popup_opened' : ''}`}>\n      <div className=\"popup__container\">\n        <button\n          className=\"button popup__button-close\"\n          type=\"button\"\n          onClick={onClose}\n        />\n        <img className=\"popup__image-tooltip\" src={image} alt={\"Картинка подсказки\"}></img>\n        <p className=\"popup__tooltip\">{tooltip}</p>\n      </div>\n    </section>\n  )\n}\n\nexport default InfoTooltip;","import React from 'react';\nimport { Route, Redirect } from \"react-router-dom\";\n\nconst ProtectedRoute = (props) => {\n  return (\n    <Route>\n      {\n        () => props.loggedIn ? props.children : <Redirect to=\"./sign-in\" />\n      }\n    </Route>\n  )\n}\n\nexport default ProtectedRoute;","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Register = ({ onRegister }) => {\n  // Дефолтное значение инпутов\n  const initialData = {\n    email: '',\n    password: '',\n    confirmation: ''\n  };\n\n  // Дефолтное значение валидации\n  const initialInputsValid = {\n    email: false,\n    password: false,\n    confirmation: false,\n    form: false\n  }\n\n  // Дефолтное значение ошибок валидации и сабмита\n  const initialErrorsValid = {\n    email: '',\n    password: '',\n    confirmation: ''\n  }\n\n  // Стейты компонента\n  const [data, setData] = useState(initialData);\n  const [validations, setValidations] = useState(initialInputsValid);\n  const [errorsValid, setErrorsValid] = useState(initialErrorsValid);\n\n\n  // Функции компонента\n  // --Проверка валидности формы \n  // --Проверка валидности инпуты\n  // --Ресет формы \n  // --Закрытие формы\n  // --Сабмит формы \n  const checkFormValid = () => {\n    if (!validations.email || !validations.password || !validations.confirmation) {\n      return setValidations(data => ({\n        ...data,\n        form: false,\n      }));\n    } else {\n      return setValidations(data => ({\n        ...data,\n        form: true,\n      }));\n    }\n  }\n\n  const handleChange = (e) => {\n    const { name, value, validity, validationMessage } = e.target;\n\n    checkFormValid()\n\n    setData(data => ({\n      ...data,\n      [name]: value,\n    }));\n\n    setValidations(data => ({\n      ...data,\n      [name]: validity.valid,\n    }));\n\n    setErrorsValid(data => ({\n      ...data,\n      [name]: validationMessage,\n    }));\n  }\n\n  const resetForm = () => {\n    setData(initialData);\n    setValidations(initialInputsValid);\n    setErrorsValid(initialErrorsValid);\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    // Проверяем совпадение паролей\n    if (data.password !== data.confirmation) {\n\n      setValidations((data) => ({\n        ...data,\n        password: false,\n        confirmation: false,\n        form: false\n      }));\n\n      setData((data) => ({\n        ...data,\n        password: '',\n        confirmation: ''\n      }));\n\n      setErrorsValid((data) => ({\n        ...data,\n        password: 'Пароли не совпадают',\n        confirmation: 'Пароли не совпадают'\n      }));\n      return;\n    }\n\n    // Запрос на сервер и обработка результата\n    onRegister(data)\n      .then(resetForm)\n      .catch(err => {\n        console.log(err.message || 'Что то пошло не так')\n      })\n  }\n\n  return (\n    <main className=\"register content page__content\">\n      <div className=\"register__container\">\n        <h2 className=\"register__title\">Регистрация</h2>\n        <form\n          className=\"register__form\"\n          name=\"form\"\n          id=\"form-with-register\"\n          onSubmit={handleSubmit}>\n\n          <input\n            className={`register__input register__input_type_email\n        ${!validations.email\n                ? 'register__input_state_invalid'\n                : ''\n              }`}\n            type=\"email\"\n            placeholder=\"Email\"\n            name=\"email\"\n            id=\"register-input-email\"\n            minLength=\"2\"\n            maxLength=\"100\"\n            value={data.email}\n            onChange={handleChange}\n            required\n          />\n          <span\n            id=\"register-input-email-error\"\n            className=\"register__error\">\n            {errorsValid.email}\n          </span>\n\n          <input\n            className={`register__input register__input_type_password\n        ${!validations.password\n                ? 'register__input_state_invalid'\n                : ''\n              }`}\n            type=\"password\"\n            placeholder=\"Пароль\"\n            name=\"password\"\n            id=\"register-input-password\"\n            minLength=\"6\"\n            maxLength=\"50\"\n            value={data.password}\n            onChange={handleChange}\n            required\n          />\n          <span\n            id=\"register-input-password-error\"\n            className=\"register__error\">\n            {errorsValid.password}\n          </span>\n\n          <input\n            className={`register__input register__input_type_confirm-password\n        ${!validations.confirmation\n                ? 'register__input_state_invalid'\n                : ''\n              }`}\n            type=\"password\"\n            placeholder=\"Подтвердите пароль\"\n            name=\"confirmation\"\n            id=\"register-input-confirm-password\"\n            minLength=\"2\"\n            maxLength=\"50\"\n            value={data.confirmation}\n            onChange={handleChange}\n            required\n          />\n          <span\n            id=\"register-input-confirm-password-error\"\n            className=\"register__error\">\n            {errorsValid.confirmation}\n          </span>\n\n          <button\n            className={`button register__button-submit \n            ${!validations.form\n                ? 'register__button-submit_invalid'\n                : ''\n              }`}\n            type=\"submit\">\n            Зарегистрироваться\n          </button>\n        </form>\n        <div className=\"register__signin\">\n          <p>Уже зарегистрированы? <Link to=\"/sign-in\" className=\"register__login-link\">Войти</Link></p>\n        </div>\n      </div>\n    </main>\n  );\n}\n\nexport default Register;","import React, { useState } from 'react';\n\nconst Login = ({ onLogin }) => {\n  // Дефолтное значение инпутов\n  const initialData = {\n    email: '',\n    password: '',\n  };\n\n  // Дефолтное значение валидации\n  const initialInputsValid = {\n    email: false,\n    password: false,\n    form: false\n  };\n\n  // Дефолтное значение ошибок валидации и сабмита\n  const initialErrorsValid = {\n    email: '',\n    password: ''\n  };\n\n  // Стейты компонента\n  const [data, setData] = useState(initialData);\n  const [validations, setValidations] = useState(initialInputsValid);\n  const [errorsValid, setErrorsValid] = useState(initialErrorsValid);\n\n  // Функции компонента\n  // --Проверка валидности формы \n  // --Проверка валидности инпуты\n  // --Ресет формы \n  // --Закрытие формы\n  // --Сабмит формы \n  const checkFormValid = () => {\n    if (!validations.email || !validations.password) {\n      setValidations(data => ({\n        ...data,\n        form: false,\n      }));\n    } else {\n      setValidations(data => ({\n        ...data,\n        form: true,\n      }));\n    }\n  }\n\n  const handleChange = (e) => {\n    const { name, value, validity, validationMessage } = e.target;\n\n    checkFormValid();\n\n    setData(data => ({\n      ...data,\n      [name]: value,\n    }));\n\n    setValidations(data => ({\n      ...data,\n      [name]: validity.valid,\n    }));\n\n    setErrorsValid(data => ({\n      ...data,\n      [name]: validationMessage,\n    }));\n  }\n\n  const resetForm = () => {\n    setData(initialData);\n    setValidations(initialInputsValid);\n    setErrorsValid(initialErrorsValid);\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    onLogin(data)\n      .then(resetForm)\n      .catch(err => {\n        console.log(err.message || 'Что то пошло не так')\n      })\n  }\n\n  return (\n    <main className=\"login content page__content\">\n      <div className=\"login__container\">\n        <h2 className=\"login__title\">Вход</h2>\n        <form\n          className=\"login__form\"\n          name=\"form\"\n          id=\"form-with-login\"\n          onSubmit={handleSubmit}>\n          <input\n            className={`login__input login__input_type_email\n        ${!validations.email\n                ? 'login__input_state_invalid'\n                : ''\n              }`}\n            type=\"email\"\n            placeholder=\"Email\"\n            name=\"email\"\n            id=\"login-input-email\"\n            maxLength=\"100\"\n            value={data.email}\n            onChange={handleChange}\n            required\n          />\n          <span\n            id=\"login-input-email-error\"\n            className=\"login__error\">\n            {errorsValid.email}\n          </span>\n\n          <input\n            className={`login__input login__input_type_password\n        ${!validations.password\n                ? 'login__input_state_invalid'\n                : ''\n              }`}\n            type=\"password\"\n            placeholder=\"Пароль\"\n            name=\"password\"\n            id=\"login-input-password\"\n            maxLength=\"50\"\n            value={data.password}\n            onChange={handleChange}\n            required\n          />\n          <span\n            id=\"login-input-password-error\"\n            className=\"login__error\">\n            {errorsValid.password}\n          </span>\n\n          <button\n            className={`button login__button-submit \n            ${!validations.form\n                ? 'login__button-submit_invalid'\n                : ''\n              }`}\n            type=\"submit\">\n            Войти\n          </button>\n        </form>\n      </div>\n    </main>\n  );\n}\n\nexport default Login;","export default __webpack_public_path__ + \"static/media/Logo.a307e1c4.svg\";","import React, { useState } from 'react';\nimport { useLocation, Link } from 'react-router-dom';\nimport logo from '../images/Logo.svg';\n\nconst Header = (props) => {\n  const {\n    onSignOut,\n    userEmail,\n    loggedIn\n  } = props\n\n  const path = useLocation().pathname\n\n  // Стейт бургер-меню \n  const [isActive, setIsActive] = useState(false);\n\n  // Функция переключения состояния бургер-меню\n  const handleButton = () => {\n    setIsActive(!isActive)\n  }\n\n  return (\n    <header className=\"header page__header\">\n      <img\n        src={logo}\n        alt=\"Логотип проекта Места России\"\n        className=\"header__logo\"\n      />\n      {loggedIn\n        ? (<>\n          <button\n            type=\"button\"\n            className={`header__burger button \n        ${isActive\n                ? \"active\"\n                : \"\"}`}\n            onClick={handleButton}>\n            <span></span>\n          </button>\n          <nav\n            className={`header__menu \n      ${isActive\n                ? \"active\"\n                : \"\"}`}>\n            <ul className=\"header__list\">\n              <li>\n                <p className=\"header__email\">{userEmail}</p>\n              </li>\n              <li>\n                {path === \"/mesto\"}\n                <button\n                  className=\"button header__button header__button_type_exit\"\n                  onClick={onSignOut}>\n                  Выйти\n              </button>\n              </li>\n            </ul>\n          </nav></>)\n        : (<Link\n          className=\"button header__button\"\n          to={path === \"/sign-in\" ? \"/sign-up\" : \"/sign-in\"}>\n          {path === \"/sign-in\" ? \"Регистрация\" : \"Вход\"}\n        </Link>)}\n\n\n    </header >\n  );\n}\n\nexport default Header;","import React, { useContext } from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\n\nconst Card = (props) => {\n  // Диструктуризированная переменная с пропсами\n  const {\n    card,\n    onCardLike,\n    onImageClick,\n    onCardTrash\n  } = props;\n\n  // Контекст с данными о пользователе\n  const currentUser = useContext(CurrentUserContext);\n\n  // Переменная с подтвержденным авторством \n  const isOwn = card.owner._id === currentUser._id;\n\n  // Проверка авторских лайков\n  const isLiked = card.likes\n    .some(item => item._id === currentUser._id);\n\n  // Функции компонента\n  // -- Нажатие на лайк\n  // -- Нажатие на фото\n  // -- Нажатие на урну\n  const handleLikeClick = () => onCardLike(card);\n  const handleImageClick = () => onImageClick(card);\n  function handleDeleteClick() { onCardTrash(card) }\n\n  return (\n    <article className=\"place\">\n      <img\n        className=\"place__image\"\n        alt={card.name}\n        src={card.link}\n        onClick={handleImageClick}\n      />\n      {isOwn\n        ? (<button\n          className=\"button place__button-remove\"\n          type=\"button\"\n          onClick={handleDeleteClick} />)\n        : null}\n      <div className=\"place__row-block\">\n        <h2 className=\"place__title\">{card.name}</h2>\n        <div className=\"place__column-block\">\n          <button\n            className={`button place__button-like \n            ${isLiked\n                ? ('place__button-like_active')\n                : ''}`}\n            type=\"button\"\n            onClick={handleLikeClick}\n          />\n          <span className=\"place__score-like\">{card.likes.length}</span>\n        </div>\n      </div>\n    </article>\n  );\n}\n\nexport default Card;","import React from 'react';\n\nconst ImagePopup = (props) => {\n  // Диструктуризированная переменная с пропсами\n  const {\n    card,\n    onClose\n  } = props;\n\n  return (\n    <section\n      className={`popup popup_blackout \n    ${card.isOpen\n          ? 'popup_opened'\n          : ''\n        }`}\n      id=\"popup-image\">\n      <figure className=\"popup__figure\">\n        <button\n          className=\"button popup__button-close\"\n          type=\"button\"\n          onClick={onClose}\n        />\n        <img\n          className=\"popup__image\"\n          alt={card.name}\n          src={card.link}\n        />\n        <figcaption\n          className=\"popup__caption\">\n          {card.name} / &copy; {card.owner.name}\n        </figcaption>\n      </figure>\n    </section>\n  );\n}\n\nexport default ImagePopup;","import React from 'react';\n\nconst PopupWithForm = (props) => {\n  const {\n    children,\n    name,\n    title,\n    textButton,\n    isOpen,\n    onClose,\n    onSubmit,\n    validationForm\n  } = props;\n\n  return (\n    <section className={`popup popup_type_${name} ${isOpen ? 'popup_opened' : ''}`}>\n      <div className=\"popup__container\">\n        <button\n          className=\"button popup__button-close\"\n          type=\"button\"\n          onClick={onClose}\n        />\n        <h2 className=\"popup__title\">{title}</h2>\n        <form\n          className={\"popup__form\"}\n          name={name}\n          id={name}\n          onSubmit={onSubmit}\n        >\n          {children}\n          <button\n            className={`button popup__button-submit \n            ${!validationForm\n                ? 'popup__button-submit_invalid'\n                : ''\n              }`}\n            type={\"submit\"}>\n            {textButton}\n          </button>\n        </form>\n      </div>\n    </section>\n  );\n}\n\nexport default PopupWithForm;","import React, { useState, useContext, useEffect } from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport PopupWithForm from './PopupWithForm';\n\nconst EditProfilePopup = (props) => {\n  // Диструктуризированная переменная с пропсами\n  const {\n    onUpdateUser,\n    isOpen,\n    onClose\n  } = props;\n\n  // Контекст с данными о пользователе\n  const currentUser = useContext(CurrentUserContext);\n\n  // Дефолтное значение инпутов\n  const initialData = {\n    author: currentUser.name || '',\n    about: currentUser.about || ''\n  };\n\n  // Дефолтное значение валидации\n  const initialInputsValid = {\n    author: false,\n    about: false,\n    form: false\n  }\n\n  // Дефолтное значение ошибок валидации и сабмита\n  const initialErrorsValid = {\n    author: '',\n    about: ''\n  }\n\n  // Стейты компонента\n  const [data, setData] = useState(initialData);\n  const [validations, setValidations] = useState(initialInputsValid);\n  const [errorsValid, setErrorsValid] = useState(initialErrorsValid);\n\n  // --Хук Юз Эффект для отображения актуальных данных о пользователе\n  useEffect(() => {\n    setData(data => ({\n      author: currentUser.name || '',\n      about: currentUser.about || ''\n    }));\n  }, [currentUser]);\n\n  // Функции компонента\n  // --Проверка валидности формы \n  // --Проверка валидности инпуты\n  // --Ресет формы \n  // --Закрытие формы\n  // --Сабмит формы\n  const checkFormValid = () => {\n    if (!validations.author || !validations.about) {\n      return setValidations((data) => ({\n        ...data,\n        form: false\n      }))\n    } else {\n      return setValidations((data) => ({\n        ...data,\n        form: true\n      }))\n    }\n  }\n\n  const handleChange = (e) => {\n    const { name, value, validity, validationMessage } = e.target;\n\n    checkFormValid();\n\n    setData(data => ({\n      ...data,\n      [name]: value,\n    }));\n\n    setValidations(data => ({\n      ...data,\n      [name]: validity.valid,\n    }));\n\n    setErrorsValid(data => ({\n      ...data,\n      [name]: validationMessage,\n    }));\n  }\n\n  const resetForm = () => {\n    setData(initialData);\n    setValidations(initialInputsValid);\n    setErrorsValid(initialErrorsValid);\n  }\n\n  const handleClose = () => {\n    onClose()\n    resetForm()\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    onUpdateUser(data)\n    resetForm()\n  }\n\n  return (\n    <PopupWithForm\n      name=\"popup-profile\"\n      title=\"Редактировать профиль\"\n      textButton=\"Сохранить\"\n      isOpen={isOpen}\n      onClose={handleClose}\n      onSubmit={handleSubmit}\n      validationForm={validations.form}\n    >\n      <input\n        className={`popup__input popup__input_type_author \n        ${!validations.author\n            ? 'popup__input_state_invalid'\n            : ''\n          }`}\n        type=\"text\"\n        placeholder=\"Ваше имя\"\n        id=\"popup-input-name\"\n        name='author'\n        minLength=\"2\"\n        maxLength=\"40\"\n        value={data.author}\n        onChange={handleChange}\n        required\n      />\n      <span\n        id=\"popup-input-name-error\"\n        className=\"popup__error\">\n        {errorsValid.author}\n      </span>\n\n      <input\n        className={`popup__input popup__input_type_status \n        ${!validations.about\n            ? 'popup__input_state_invalid'\n            : ''\n          }`}\n        type=\"text\"\n        placeholder=\"Расскажите о себе\"\n        id=\"popup-input-status\"\n        name='about'\n        minLength=\"2\"\n        maxLength=\"200\"\n        value={data.about}\n        onChange={handleChange}\n        required\n      />\n      <span\n        id=\"popup-input-status-error\"\n        className=\"popup__error\">\n        {errorsValid.about}\n      </span>\n\n    </PopupWithForm>\n  );\n}\n\nexport default EditProfilePopup;\n","import React, { useState } from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nconst EditAvatarPopup = (props) => {\n  // Диструктуризированная переменная с пропсами\n  const {\n    onUpdateAvatar,\n    isOpen,\n    onClose\n  } = props;\n\n  // Дефолтное значение инпутов\n  const initialData = {\n    avatar: ''\n  };\n\n  // Дефолтное значение валидации\n  const initialInputsValid = {\n    avatar: false,\n    form: false\n  }\n\n  // Дефолтное значение ошибок валидации и сабмита\n  const initialErrorsValid = {\n    avatar: ''\n  }\n\n  // Стейты компонента\n  const [data, setData] = useState(initialData);\n  const [validations, setValidations] = useState(initialInputsValid);\n  const [errorsValid, setErrorsValid] = useState(initialErrorsValid);\n\n  // Функции компонента\n  // --Проверка валидности формы \n  // --Проверка валидности инпуты\n  // --Ресет формы \n  // --Закрытие формы\n  // --Сабмит формы \n  const checkFormValid = () => {\n    if (!validations.avatar) {\n      return setValidations((data) => ({\n        ...data,\n        form: false\n      }))\n    } else {\n      return setValidations((data) => ({\n        ...data,\n        form: true\n      }))\n    }\n  }\n\n  const handleChange = (e) => {\n    const { name, value, validity, validationMessage } = e.target;\n\n    checkFormValid();\n\n    setData(data => ({\n      ...data,\n      [name]: value,\n    }));\n\n    setValidations(data => ({\n      ...data,\n      [name]: validity.valid,\n    }));\n\n    setErrorsValid(data => ({\n      ...data,\n      [name]: validationMessage,\n    }));\n  }\n\n  const resetForm = () => {\n    setData(initialData);\n    setValidations(initialInputsValid);\n    setErrorsValid(initialErrorsValid);\n  }\n\n  const handleClose = () => {\n    onClose()\n    resetForm()\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    onUpdateAvatar(data)\n    resetForm();\n  }\n\n  return (\n    <PopupWithForm\n      name=\"add-avatar\"\n      title=\"Обновить аватар\"\n      textButton=\"Обновить\"\n      isOpen={isOpen}\n      onClose={handleClose}\n      onSubmit={handleSubmit}\n      validationForm={validations.form}\n    >\n      <input\n        className={`popup__input popup__input_type_photo \n        ${!validations.avatar\n            ? ('popup__input_state_invalid')\n            : ('')\n          }`}\n        type=\"url\"\n        placeholder=\"Ссылка на аватар\"\n        name='avatar'\n        id=\"popup-input-url-avatar\"\n        onChange={handleChange}\n        minLength=\"7\"\n        maxLength=\"300\"\n        value={data.avatar}\n        required\n      />\n      <span\n        id=\"popup-input-url-avatar-error\"\n        className=\"popup__error\">\n        {errorsValid.avatar}\n      </span>\n    </PopupWithForm>\n  );\n}\n\nexport default EditAvatarPopup;\n\n","import React, { useState } from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nconst AddPlacePopup = (props) => {\n  // Диструктуризированная переменная с пропсами\n  const {\n    onAddPlace,\n    isOpen,\n    onClose\n  } = props;\n\n  // Дефолтное значение инпутов\n  const initialData = {\n    name: '',\n    link: ''\n  };\n\n  // Дефолтное значение валидации\n  const initialInputsValid = {\n    name: false,\n    link: false,\n    form: false\n  }\n\n  // Дефолтное значение ошибок валидации и сабмита\n  const initialErrorsValid = {\n    name: '',\n    link: ''\n  }\n\n  // Стейты компонента\n  const [data, setData] = useState(initialData);\n  const [validations, setValidations] = useState(initialInputsValid);\n  const [errorsValid, setErrorsValid] = useState(initialErrorsValid);\n\n  // Функции компонента\n  // --Проверка валидности формы \n  // --Проверка валидности инпуты\n  // --Ресет формы \n  // --Закрытие формы\n  // --Сабмит формы \n  const checkFormValid = () => {\n    if (!validations.name || !validations.link) {\n      return setValidations((data) => ({\n        ...data,\n        form: false\n      }))\n    } else {\n      return setValidations((data) => ({\n        ...data,\n        form: true\n      }))\n    }\n  }\n\n  const handleChange = (e) => {\n    const { name, value, validity, validationMessage } = e.target;\n\n    checkFormValid();\n\n    setData(data => ({\n      ...data,\n      [name]: value,\n    }));\n\n    setValidations(data => ({\n      ...data,\n      [name]: validity.valid,\n    }));\n\n    setErrorsValid(data => ({\n      ...data,\n      [name]: validationMessage,\n    }));\n  }\n\n  const resetForm = () => {\n    setData(initialData);\n    setValidations(initialInputsValid);\n    setErrorsValid(initialErrorsValid);\n  }\n\n  const handleClose = () => {\n    onClose()\n    resetForm()\n  }\n\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    onAddPlace(data)\n    resetForm()\n  }\n\n  return (\n    <PopupWithForm\n      name=\"add-card\"\n      title=\"Новое место\"\n      textButton=\"Создать\"\n      isOpen={isOpen}\n      onClose={handleClose}\n      onSubmit={handleSubmit}\n      validationForm={validations.form}\n    >\n      <input\n        className={`popup__input popup__input_type_place-name \n        ${!validations.name\n            ? ('popup__input_state_invalid')\n            : ('')\n          }`}\n        type=\"text\"\n        placeholder=\"Название\"\n        name=\"name\"\n        id=\"popup-input-place-name\"\n        minLength=\"2\"\n        maxLength=\"30\"\n        value={data.name}\n        onChange={handleChange}\n        required\n      />\n      <span\n        id=\"popup-input-place-name-error\"\n        className=\"popup__error\">\n        {errorsValid.name}\n      </span>\n\n      <input\n        className={`popup__input popup__input_type_photo \n        ${!validations.link\n            ? ('popup__input_state_invalid')\n            : ('')\n          }`}\n        type=\"url\"\n        placeholder=\"Ссылка на картинку\"\n        id=\"popup-input-url\"\n        name=\"link\"\n        minLength=\"7\"\n        maxLength=\"300\"\n        value={data.link}\n        onChange={handleChange}\n        required\n      />\n      <span\n        id=\"popup-input-url-error\"\n        className=\"popup__error\">\n        {errorsValid.link}\n      </span>\n    </PopupWithForm>\n  );\n}\n\nexport default AddPlacePopup;","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nconst RemovePlacePopup = (props) => {\n  // Диструктуризированная переменная с пропсами\n  const {\n    onDeleteCard,\n    isOpen,\n    onClose\n  } = props;\n\n  // функция отправки формы\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onDeleteCard();\n  }\n\n  return (\n    <PopupWithForm\n      name=\"remove-card\"\n      title=\"Вы уверены?\"\n      textButton=\"Да\"\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmit={handleSubmit}\n      validationForm={true} />\n  );\n}\n\nexport default RemovePlacePopup;","\nimport React, { useContext, useState } from 'react';\nimport Card from './Card.js';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\n// popup components\nimport ImagePopup from './ImagePopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport RemovePlacePopup from './RemovePlacePopup';\n\nconst Main = (props) => {\n  // Диструктуризированная переменная с пропсами\n  const {\n    isLoading,\n    cards,\n    onCardDelete,\n    onCardLike,\n    onAddPlaceSubmit,\n    onUpdateAvatar,\n    onUpdateUser\n\n  } = props\n\n  const currentUser = useContext(CurrentUserContext);\n\n  // Стейт переменные компонента\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isRemovePlacePopupOpen, setIsRemovePlacePopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState({\n    isOpen: false,\n    owner: { name: '' }\n  });\n  const [useCardId, setUseCardId] = useState('');\n\n  // функции открытия попапов\n  const handleEditProfileClick = () => setIsEditProfilePopupOpen(true);\n  const handleAddPlaceClick = () => setIsAddPlacePopupOpen(true);\n  const handleEditAvatarClick = () => setIsEditAvatarPopupOpen(true);\n  const handleCardClick = (data) => setSelectedCard({\n    isOpen: true,\n    ...data\n  });\n  const handleTrashClick = (card) => {\n    setIsRemovePlacePopupOpen(true)\n    setUseCardId(card._id)\n  }\n\n  // функция закрытия всех попапов\n  const closeAllPopups = () => {\n    setIsEditProfilePopupOpen(false)\n    setIsAddPlacePopupOpen(false)\n    setIsEditAvatarPopupOpen(false)\n    setIsRemovePlacePopupOpen(false)\n    setSelectedCard({\n      isOpen: false,\n      owner: { name: '' }\n    })\n  }\n\n  const handleUpdateUser = (data) => {\n    onUpdateUser(data)\n      .then(closeAllPopups)\n      .catch(err => console.log(`Error: ${err}`));\n  }\n\n  const handleUpdateAvatar = (data) => {\n    onUpdateAvatar(data)\n      .then(closeAllPopups)\n      .catch(err => console.log(`Error: ${err}`));\n  }\n\n  const handleAddPlaceSubmit = (data) => {\n    onAddPlaceSubmit(data)\n      .then(closeAllPopups)\n      .catch(err => console.log(`Error: ${err}`));\n  }\n\n  const handleCardLike = (card) => {\n    onCardLike(card)\n      .catch(err => console.log(`Error: ${err}`));\n  }\n\n  const handleCardDelete = () => {\n    onCardDelete(useCardId)\n      .then(closeAllPopups)\n      .catch(err => console.log(`Error: ${err}`));\n  }\n\n  return (\n    <>\n      <main className={\"content page__content\"}>\n        <section className={\"profile content__item\"}>\n          <div\n            className={\"profile__overlay\"}\n            onClick={handleEditAvatarClick}>\n            <img\n              src={currentUser.avatar || \"#\"}\n              alt={`Аватар ${currentUser.name || \"\"}`}\n              className={\"profile__avatar\"} />\n          </div>\n          <div className={\"profile__text-block\"}>\n            <div className={\"profile__row-block\"}>\n              <h1\n                className={\"profile__author\"}>\n                {currentUser.name || \"Загрузка...\"}\n              </h1>\n              <button\n                className={\"button profile__button-edit\"}\n                type={\"button\"}\n                onClick={handleEditProfileClick}>\n              </button>\n            </div>\n            <p\n              className={\"profile__status\"}>\n              {currentUser.about || \"пожалуйста, подождите\"}\n            </p>\n          </div>\n          <button\n            className=\"button profile__button-add\"\n            type=\"button\"\n            onClick={handleAddPlaceClick}>\n          </button>\n        </section>\n\n        {isLoading\n          ? (<p>Загрузка...</p>)\n          : (<section className={\"places content__item\"}>\n            {cards.map(item => (\n              <Card\n                key={item._id}\n                card={item}\n                onImageClick={handleCardClick}\n                onCardLike={handleCardLike}\n                onCardTrash={handleTrashClick}\n              />\n            )\n            )}\n          </section>)\n        }\n      </main>\n\n      <EditProfilePopup\n        isOpen={isEditProfilePopupOpen}\n        onClose={closeAllPopups}\n        onUpdateUser={handleUpdateUser}\n      />\n\n      <AddPlacePopup\n        isOpen={isAddPlacePopupOpen}\n        onClose={closeAllPopups}\n        onAddPlace={handleAddPlaceSubmit}\n      />\n\n      <EditAvatarPopup\n        isOpen={isEditAvatarPopupOpen}\n        onClose={closeAllPopups}\n        onUpdateAvatar={handleUpdateAvatar}\n      />\n\n      <RemovePlacePopup\n        isOpen={isRemovePlacePopupOpen}\n        onClose={closeAllPopups}\n        onDeleteCard={handleCardDelete}\n      />\n\n      <ImagePopup\n        card={selectedCard}\n        onClose={closeAllPopups}\n      />\n    </>\n  )\n}\n\nexport default Main;\n","import React from 'react';\n\nconst Footer = () => {\n  return (\n    <footer className=\"footer page__footer\">\n      <p className=\"footer__author\">\n        &copy; 2020 Mesto Russia Lod55\n      </p>\n    </footer>\n  );\n}\n\nexport default Footer;","export const BASE_URL = 'https://auth.nomoreparties.co';\n\nconst responseCheck = (response) => response.ok ? response.json() : Promise.reject(`Ошибка ${response.status}`);\n\nexport const register = ({ password, email }) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      \"password\": password,\n      \"email\": email\n    })\n  })\n    .then(responseCheck)\n};\n\nexport const authorize = ({ password, email }) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      \"password\": password,\n      \"email\": email\n    })\n  })\n    .then(responseCheck)\n};\n\nexport const getContent = (token) => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${token}`\n    }\n  })\n    .then(responseCheck)\n}","class Api {\n  constructor({ baseUrl, token, groupId }) {\n    this._address = baseUrl;\n    this._token = token;\n    this._groupId = groupId;\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка ${res.status}`);\n  }\n\n  getInitialCards() {\n    return fetch(`${this._address}/${this._groupId}/cards`, {\n      headers: {\n        authorization: this._token\n      }\n    })\n      .then(this._checkResponse)\n  }\n\n  getInfoUser() {\n    return fetch(`${this._address}/${this._groupId}/users/me`, {\n      headers: {\n        authorization: this._token\n      }\n    })\n      .then(this._checkResponse)\n  }\n\n  setInfoUser({ author, about }) {\n    return fetch(`${this._address}/${this._groupId}/users/me`, {\n      method: 'PATCH',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: author,\n        about,\n      })\n    })\n      .then(this._checkResponse)\n  }\n\n  setCard({ name, link }) {\n    return fetch(`${this._address}/${this._groupId}/cards`, {\n      method: 'POST',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name,\n        link\n      })\n    })\n      .then(this._checkResponse)\n  }\n\n  removeCard(id) {\n    return fetch(`${this._address}/${this._groupId}/cards/${id}`, {\n      method: 'DELETE',\n      headers: {\n        authorization: this._token,\n      }\n    })\n      .then(this._checkResponse)\n  }\n\n  changeLikeCardStatus(id, isLiked) {\n    return fetch(`${this._address}/${this._groupId}/cards/likes/${id}`, {\n      method: isLiked ? 'DELETE' : 'PUT',\n      headers: {\n        authorization: this._token,\n      }\n    })\n      .then(this._checkResponse)\n  }\n\n  setUserAvatar({ avatar }) {\n    return fetch(`${this._address}/${this._groupId}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        avatar,\n      })\n    })\n      .then(this._checkResponse)\n  }\n}\n\nconst config = {\n  baseUrl: 'https://mesto.nomoreparties.co/v1',\n  token: '429ceaf1-0a34-48aa-a4c9-c70c2c79ac6e',\n  groupId: 'cohort-19'\n}\n\nconst api = new Api(config);\n\nexport default api;","import React, { useState, useEffect, useCallback } from 'react';\nimport { Route, Switch, Redirect, useHistory } from 'react-router-dom';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'\n\n// popup components\nimport InfoTooltip from './InfoTooltip';\n\n// pages components\nimport ProtectedRoute from \"./ProtectedRoute\"\nimport Register from './Register';\nimport Login from './Login';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\n\n// api\nimport * as auth from '../utils/auth';\nimport api from '../utils/api.js'\n\nconst App = () => {\n  // Дефолтные значение данных пользователя для api/auth\n  const initialData = {\n    email: ''\n  }\n\n  // Стейт переменные компонента\n  const [isInfoTooltipPopupOpen, setIsInfoTooltipPopupOpen] = useState(false);\n  const [cards, setCards] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [currentUser, setCurrentUser] = useState({});\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [data, setData] = useState(initialData);\n  const [isSuccess, setIsSuccess] = useState(false);\n\n  const history = useHistory();\n\n  // функция закрытия попапа\n  const closePopup = () => {\n    setIsInfoTooltipPopupOpen(false)\n  }\n\n\n  // ---------- Функции основного Api ----------\n  // Проверка наличия ответа сервера\n  const responseCheck = (res) => {\n    if (!res) throw new Error(`Ошибка: ${res.message}`);\n  }\n\n  // Отправка информации на сервер\n  const handleUpdateUser = ({ author, about }) => {\n    return api.setInfoUser({ author, about })\n      .then(res => {\n        responseCheck(res);\n        setCurrentUser(res);\n        return res;\n      })\n  }\n\n  // Изменение аватара на сервере и отрисовка\n  const handleUpdateAvatar = ({ avatar }) => {\n    return api.setUserAvatar({ avatar })\n      .then(res => {\n        responseCheck(res);\n        setCurrentUser(res);\n        return res;\n      })\n  }\n\n  // Добавление новой карточки на сервер и отрисовка\n  const handleAddPlaceSubmit = ({ name, link }) => {\n    return api.setCard({ name, link })\n      .then(res => {\n        responseCheck(res);\n        setCards([res, ...cards]);\n        return res;\n      })\n  }\n\n  // Контоль состояния лайка и работа с состоянием на сервере\n  const handleCardLike = (card) => {\n    const isLiked = card.likes.some(item => item._id === currentUser._id);\n\n    return api.changeLikeCardStatus(card._id, isLiked)\n      .then(res => {\n        responseCheck(res);\n        const newCards = cards.map(item => item._id === card._id ? res : item);\n        setCards(newCards);\n        return res;\n      })\n  }\n\n  // Удаления карточки с сервера\n  const handleCardDelete = (useCardId) => {\n    return api.removeCard(useCardId)\n      .then(res => {\n        responseCheck(res);\n        const newCards = cards.filter(item => item._id === useCardId ? null : item);\n        setCards(newCards);\n        return res;\n      })\n  }\n\n  useEffect(() => {\n    setIsLoading(true)\n    api.getInitialCards()\n      .then(res => {\n        setCards(res)\n      })\n      .catch(err => console.log(`Error: ${err}`))\n      .finally(() => setIsLoading(false))\n  }, []);\n\n  useEffect(() => {\n    api.getInfoUser()\n      .then(res => {\n        setCurrentUser(res);\n      })\n      .catch(err => console.log(`Error: ${err}`));\n  }, []);\n\n  // ---------- Функции запросов api/auth ----------\n  // Проверка токена пользователя на подленность на сервере\n  const tokenCheck = useCallback(() => {\n    const jwt = localStorage.getItem('jwt');\n\n    if (jwt) {\n      auth.getContent(jwt)\n        .then((res) => {\n          if (res) {\n            setLoggedIn(true);\n            setData({\n              email: res.data.email\n            })\n            history.push('/mesto');\n          }\n        })\n        .catch(() => history.push('/sign-in'));\n    }\n  }, [history])\n\n  useEffect(() => {\n    tokenCheck();\n  }, [tokenCheck])\n\n  // Регистрации пользователя на сервере\n  const handleRegister = ({ password, email }) => {\n    return auth.register({ password, email })\n      .then(res => {\n        if (!res || res.statusCode === 400) throw new Error(`Ошибка: ${res.message}`);\n        setIsInfoTooltipPopupOpen(true);\n        setIsSuccess(true);\n        history.push('/sign-in')\n        return res;\n      })\n      .catch(err => {\n        setIsInfoTooltipPopupOpen(true);\n        setIsSuccess(false);\n        return err;\n      })\n  }\n\n  // Авторизации пользователя\n  const handleLogin = ({ password, email }) => {\n    return auth.authorize({ password, email })\n      .then(res => {\n        if (!res || res.statusCode === 400 || res.statusCode === 401) throw new Error(`Ошибка: ${res.message}`);\n        if (res.token) {\n          setIsInfoTooltipPopupOpen(true);\n          setIsSuccess(true);\n          setLoggedIn(true);\n          localStorage.setItem('jwt', res.token);\n        };\n      })\n      .then(tokenCheck)\n      .catch(err => {\n        setIsInfoTooltipPopupOpen(true);\n        setIsSuccess(false);\n        return err;\n      })\n  }\n\n  // Выход из системы\n  const handleSignOut = () => {\n    localStorage.removeItem('jwt');\n    setData(initialData);\n    setLoggedIn(false);\n    history.push('/sign-in');\n  }\n\n  return (\n    <div className=\"page__container\">\n      <CurrentUserContext.Provider value={currentUser}>\n        <Header\n          loggedIn={loggedIn}\n          onSignOut={handleSignOut}\n          userEmail={data.email}\n        />\n\n        <Switch>\n          <ProtectedRoute\n            path=\"/mesto\"\n            loggedIn={loggedIn}>\n            <Main\n              onCardDelete={handleCardDelete}\n              onCardLike={handleCardLike}\n              onAddPlaceSubmit={handleAddPlaceSubmit}\n              onUpdateAvatar={handleUpdateAvatar}\n              onUpdateUser={handleUpdateUser}\n              cards={cards}\n              isLoading={isLoading}\n            />\n          </ProtectedRoute>\n\n          <Route path='/sign-in' exact>\n            <Login onLogin={handleLogin} />\n          </Route>\n\n          <Route path='/sign-up' exact>\n            <Register onRegister={handleRegister} />\n          </Route>\n\n          <Route path=\"*\">\n            {loggedIn\n              ? <Redirect to=\"/mesto\" />\n              : <Redirect to=\"/sign-in\" />}\n          </Route>\n        </Switch>\n\n        <Footer />\n\n        <InfoTooltip\n          isOpen={isInfoTooltipPopupOpen}\n          onClose={closePopup}\n          isSuccess={isSuccess}\n        />\n\n      </CurrentUserContext.Provider>\n    </div>\n  )\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* Пропс для деплоя на гитхаб */}\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}